# Generated by Django 5.1.6 on 2025-03-24 16:41

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(2, 'employee'), (1, 'admin')], default=1, max_length=50)),
                ('profile_pic', models.ImageField(default='media/profile_pic/default.jpg', upload_to='media/profile_pic')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='empeducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CoursePG', models.CharField(default='0', max_length=200)),
                ('SchoolCollegePG', models.CharField(default='0', max_length=200)),
                ('YearPassingPG', models.CharField(default='0', max_length=200)),
                ('PercentagePG', models.CharField(default='0', max_length=200)),
                ('CourseGra', models.CharField(default='0', max_length=200)),
                ('SchoolCollegeGra', models.CharField(default='0', max_length=200)),
                ('YearPassingGra', models.CharField(default='0', max_length=200)),
                ('PercentageGra', models.CharField(default='0', max_length=200)),
                ('CourseSSC', models.CharField(default='0', max_length=200)),
                ('SchoolCollegeSSC', models.CharField(default='0', max_length=200)),
                ('YearPassingSSC', models.CharField(default='0', max_length=200)),
                ('PercentageSSC', models.CharField(default='0', max_length=200)),
                ('CourseHSC', models.CharField(default='0', max_length=200)),
                ('SchoolCollegeHSC', models.CharField(default='0', max_length=200)),
                ('YearPassingHSC', models.CharField(default='0', max_length=200)),
                ('PercentageHSC', models.CharField(default='0', max_length=200)),
                ('creationdate', models.DateTimeField(auto_now_add=True)),
                ('empid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='empexperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Employer1Name', models.CharField(default='0', max_length=200)),
                ('Employer1Designation', models.CharField(default='0', max_length=200)),
                ('Employer1CTC', models.CharField(default='0', max_length=200)),
                ('Employer1WorkDuration', models.CharField(default='0', max_length=200)),
                ('Employer2Name', models.CharField(default='0', max_length=200)),
                ('Employer2Designation', models.CharField(default='0', max_length=200)),
                ('Employer2CTC', models.CharField(default='0', max_length=200)),
                ('Employer2WorkDuration', models.CharField(default='0', max_length=200)),
                ('Employer3Name', models.CharField(default='0', max_length=200)),
                ('Employer3Designation', models.CharField(default='0', max_length=200)),
                ('Employer3CTC', models.CharField(default='0', max_length=200)),
                ('Employer3WorkDuration', models.CharField(default='0', max_length=200)),
                ('creationdate', models.DateTimeField(auto_now_add=True)),
                ('empid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobilenumber', models.CharField(max_length=11)),
                ('gender', models.CharField(default='0', max_length=100)),
                ('empcode', models.CharField(max_length=20)),
                ('empdept', models.CharField(default='0', max_length=100)),
                ('empdesignation', models.CharField(default='0', max_length=150)),
                ('address', models.CharField(default='0', max_length=250)),
                ('joiningdate', models.CharField(default='0', max_length=200)),
                ('regdate_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('source', models.CharField(choices=[('instagram', 'Instagram'), ('facebook', 'Facebook'), ('referred', 'Referred'), ('google', 'Google'), ('other', 'Other')], default='other', max_length=50)),
                ('services', models.CharField(choices=[('seo', 'SEO'), ('android_development', 'Android Development'), ('logo_design', 'Logo Design'), ('website', 'Website'), ('other', 'Other')], default='other', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ersapp.employees')),
            ],
        ),
        migrations.CreateModel(
            name='LeadRemark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lead_name', models.CharField(max_length=255)),
                ('lead_contact_number', models.CharField(max_length=15)),
                ('remark', models.TextField()),
                ('call_connect_status', models.CharField(blank=True, choices=[('connected', 'Connected'), ('not_connected', 'Not Connected'), ('follow_up', 'Follow Up')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ersapp.employees')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ersapp.lead')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_reason', models.CharField(choices=[('personal', 'Personal'), ('medical', 'Medical'), ('other', 'Other')], max_length=20)),
                ('from_date', models.DateField()),
                ('from_time', models.TimeField()),
                ('to_date', models.DateField()),
                ('to_time', models.TimeField()),
                ('place_visit', models.CharField(max_length=200)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RegisteredFace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='faces/')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ersapp.employees')),
            ],
        ),
        migrations.CreateModel(
            name='TodoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('marked_at', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ersapp.employees')),
            ],
            options={
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
